.contact-me__section {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    margin: 8rem 0;
}

.contact-me__title, 
.contact-me__description {
    width: 70%;
    text-align: center;
}

.contact-me__form {
    width: 70%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.contact-me__inp {
    position: relative;
    /* margin: auto; */
    width: 70%;
    border-radius: 8px;
    overflow: hidden;
}

.contact-me__label {
    position: absolute;
    top: 20px;
    left: 12px;
    font-size: 16px;
    color: rgba(0, 0, 0, 0.5);
    font-weight: 500;
    transform-origin: 0 0;
       /*transform origin é o ponto em volta onde o transformation é aplicado.*/
       /*nesse caso, queremos que o ponto de origem da transfomação seja na posição 0 tanto do X quanto do Y. Fica mais fácil visualizar testando mais valores nele...*/
    transform: translate3d(0, 0, 0);
       /*translate3d serve para transitar/mover o elemento em uma dimesão 3d. A ordem dos parâmetros é dX, dY e dZ (d = dimensão) */
    transition: all .2s ease;
    pointer-events: none;
}

.contact-me__input-text {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    border: 0;
    font-family: inherit;
    padding: 10px 12px 0 12px;
    height: 48px;
    font-size: 16px;
    font-weight: 400;
    background: rgba(0, 0, 0, .02);
    box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.5);
    color: #000;
    transition: all .15s ease;

    background: rgba(255, 255, 255, 0.678);
    
    margin: 0.5rem 0;
}


.contact-me__input-text:hover {
    box-shadow: inset 0 -1px 0 rgb(0, 0, 0, 0.5);
}

.contact-me__input-text:not(:placeholder-shown) + .contact-me__label {
    /*:placeholder-shown é um pseudoelemento que serve para trabalhar com um input quando o placeholder é exibido. Nesse caso, quando o placeholder não estiver parecendo (quando o usuário digitar algo), fazemos com que o label ainda apareça. Isso que dá o efeito. Mas note que não há nada no placeholder, e há sim um label para substituir ele, o que nos permite fazer esse efeito do input. */
    color: rgb(0, 0, 0, 0.5);
    transform: translate3d(0,-12px,0) scale(.90);
       /*note que estamos apenas trabalhando com dimensão Y, isso para que o .label seja mantido no topo.*/
       /*scale redimensiona um elemento no plano 2d. Como sempre, muito mais fácil vizualisar testando...*/
}

.contact-me__input-text:focus {
    outline: none;
    box-shadow: inset 0 -2px 0 #0077ff;
}

.contact-me__input-text:focus + .contact-me__label {
    outline: none;
    box-shadow: inset 0 -2px 0 #0077ff;
    color: #0077ff;
    transform: translate3d(0,-12px,0) scale(.90);
}

.contact-me__textarea {
    width: 70%;
    height: 10rem;
    padding: 0;
    margin: 0.5rem 0;
    outline: none;
    resize: none;
}